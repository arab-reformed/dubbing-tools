#!/usr/bin/env python3

import fire
from dubbing_tools.transcript import *
from dubbing_tools.constants import *
import sys


def cmd(project_path: str, lang: str):
    """
    Build timings for translated audio

    Builds timings for having both the source audio and translated TTS audio
    in the video

    Note: the TTS audio for the translated language should have been generated
    using `dt-tts-natural`

    :param project_path: path to the root of the project directory
    :param lang: language for which to build the translation
    """
    transcript = Transcript.load(project_path)
    # for phrase in transcript.phrases:
    #     phrase.source.natural_audio = Audio(file_name=phrase.source.natural_audio_fullpath(service=SERVICE_SOURCE))
    #     phrase.source.natural_audio.get_duration()

    # with open('../tmp/transcript.json', 'w') as f:
    #     f.write(transcript.to_json(indent=2, ensure_ascii=False))
    #     f.close()

    transcript.build_translation_timings(lang=lang)

    if not transcript.save():
        print("Error saving transcript", file=sys.stderr)


if __name__ == "__main__":
    fire.Fire(cmd)
