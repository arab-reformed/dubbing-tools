#!/usr/bin/env python3

import sys
import fire

from dubbing_tools.transcript import Transcript


SOURCE_LANG = 'en-US'
SPEAKER_COUNT = 1
PHRASE_HINTS = []


def cmd(project_path: str, manuscript_file: str, save: bool = False):
    """
    import a manuscript document generated by `dt-export-manuscript`.

    Imports a manuscript document in the format defined in xref:manuscript.adoc[Manuscript Documentation]

    :param project_path: path to the root of the project directory
    :param manuscript_file: name of the manuscript file
    :param save: save changes.  Without this parameter changes will not be saved (default: false)
    """

    transcript = Transcript.load(project_path)

    line_num = 0
    with open(manuscript_file, mode='r', encoding='UTF-8') as f:
        k = 0
        for line in f.readlines():
            line_num += 1

            if len(line.strip()) > 0:
                words = line.split('`')

                j = 0
                while j < len(words):
                    transcript.words[k].manuscript_break_before = j == 0

                    word = transcript.words[k]
                    if words[j].strip() == '':
                        print('%s: %s --> (deleted)' % (line_num, word.word))
                        del transcript.words[k]

                    # if no spaces between the backticks and the words, join them
                    # TODO: this fails if trying to combine more than two words
                    elif j < len(words)-1 and words[j][-1] != ' ' and words[j+1][0] != ' ':
                        if word.word != words[j].strip():
                            print('%s: %s %s --> %s' % (line_num, word.word, transcript.words[k+1].word, (words[j] + words[j+1]).strip()), file=sys.stderr)

                        word.set_word((words[j] + words[j+1]).strip())
                        word.end_time = transcript.words[k+1].end_time
                        del transcript.words[k+1]
                        j += 1
                        k += 1

                    else:
                        if word.word != words[j].strip():
                            print('%s: %s --> %s' % (line_num, word.word, words[j].strip()), file=sys.stderr)

                        word.set_word(words[j].strip())
                        k += 1

                    j += 1

    if save:
        transcript.build_phrases()
        transcript.save()

    else:
        print('Changes not saved.  Use --save option to save changes.', file=sys.stderr)


if __name__ == "__main__":
    fire.Fire(cmd)
