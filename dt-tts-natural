#!/usr/bin/env python3

import fire
from dubbing_tools.transcript import *
import sys
import dotenv
from dubbing_tools.constants import *

dotenv.load_dotenv()


def cmd(project_path: str, lang: str, service: str, voice_name: str = None, overwrite: bool = False, reset_duration: bool = False):
    """
    generate TTS audio

    Generates TTS audio for the given language using the chosen service and voice name

    :param project_path: path to the root of the project directory
    :param lang: language for which audio is to be generated
    :param service: currently either 'azure' or 'google'
    :param voice_name: name of the voice on the chosen service
    :param overwrite: if there is currently saved audio for the language, should it be overwritten?
    :param reset_duration: ??
    """

    if service not in [SERVICE_AZURE, SERVICE_GOOGLE]:
        print(f"Unknown service: {service}", file=sys.stderr)

    transcript = Transcript.load(project_path)

    if reset_duration:
        for phrase in transcript.phrases:
            phrase.get_target(lang).natural_audio = None

    transcript.get_tts_natural_audio(lang=lang, service=service, voice_name=voice_name, overwrite=overwrite)

    if not transcript.save():
        print("Error saving transcript", file=sys.stderr)


if __name__ == "__main__":
    fire.Fire(cmd)
