#!/usr/bin/env python3

import sys
import fire
from dubbing_tools.transcript import *
import dotenv
import copy


def cmd(project_path: str, from_lang: str, to_lang: str, overwrite: bool = False):
    """
    copy phrases from one language to another

    Copies the phrases from one language to another including their timings.

    This can be useful when moving between dialects.  For instance, Saudi Arabian Arabic (ar-SA) can be
    copied to Syrian Arabic (ar-SY) and then edited.

    :param project_path: root directory of the project
    :param from_lang: language code from which to copy
    :param to_lang: language code to copy to
    :param overwrite: should `to_lang` be overwritten if it exists.
    """

    if from_lang == to_lang:
        print("From and to languages must be different", file=sys.stderr)
        exit(1)

    transcript = Transcript.load(project_path)
    for phrase in transcript.phrases:
        if not overwrite and phrase.get_target(to_lang) is not None:
            print(f"Language {to_lang} already exists.  To overwrite use --overwrite=1", file=sys.stderr)
            exit(1)

        from_phrase = phrase.get_target(from_lang)
        if from_phrase is None:
            print(f"Language {from_lang} does  not exist in project.", file=sys.stderr)
            exit(1)

        to_phrase = copy.deepcopy(from_phrase)
        to_phrase.lang = to_lang
        to_phrase.natural_audio = None
        to_phrase.duration_audio = None

        phrase.set_target(lang=to_lang, phrase=to_phrase)

    if not transcript.save():
        print("Error saving transcript", file=sys.stderr)


if __name__ == "__main__":
    fire.Fire(cmd)
