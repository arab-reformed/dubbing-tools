from dataclasses_json import dataclass_json
from dataclasses import dataclass, field
from .word import Word
from .phrase import Phrase
import json


@dataclass_json
@dataclass
class Transcript:
    phrases: list[Phrase]
    src_lang: str
    words: list[Word] = field(default_factory=list)

    def phrase_count(self) -> int:
        return len(self.phrases)

    def words_count(self) -> int:
        return len(self.words)

    def to_srt(self, lang: str, include_source: bool = False) -> str:
        srt = ''
        for phrase in self.phrases:
            srt += phrase.to_srt(lang=lang, include_source=include_source)
            srt += "\n\n"

        return srt

    def save_audio(self, output_path, overwrite: bool = False, use_duration: bool = True):
        for target in self.targets.items():
            target.save_audio(
                output_path=output_path,
                overwrite=overwrite,
                use_duration=use_duration,
            )

    @classmethod
    def load_file(cls, file_name):
        with open(file_name, 'r') as f:
            data = json.load(f)
            return cls.from_dict(data)

    def to_ass(self, lang: str = None, include_source: bool = False) -> str:
        subtitles = """[Script Info]
; Script generated by transcript.py
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: None

[Aegisub Project Garbage]
Active Line: 6

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
Style: Arabic,Simplified Arabic,36,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,178

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
"""

        for phrase in self.phrases:
            subtitles += phrase.to_ass(lang=lang, style_name='Arabic', include_source=include_source)
            subtitles += "\n"

        return subtitles
